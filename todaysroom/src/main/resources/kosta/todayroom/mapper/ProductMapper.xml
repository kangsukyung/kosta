<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kosta.todayroom.mapper.ProductMapper">


<!-- <select id="ProductStoregetList" resultType="kosta.todayroom.domain.StoreVO">
	select * from store
</select> -->


<resultMap type="StoreVO" id="store">
	<result column="member_seq" property="member_seq"/>
</resultMap>

<resultMap type="ProductVO" id="product">
	<result column="product_seq" property="product_seq"/>
	<result column="store_seq" property="store_seq"/>
	<result column="product_name" property="product_name"/>
	<result column="product_price" property="product_price"/>
	<result column="product_fname" property="product_fname"/>
	<result column="product_uuid" property="product_uuid"/>
	<result column="product_uploadpath" property="product_uploadpath"/>
	
	<association property="store" javaType="kosta.todayroom.domain.StoreVO">
	

	<result column="member_seq" property="member_seq"/>

	
	</association>
</resultMap>

<select id="ProductItemgetList"  resultMap="product">
	SELECT *
  	FROM store s
    INNER JOIN product p
  	ON s.store_seq = p.store_seq
  	where s.member_seq = #{member_seq}
  	order by p.product_seq DESC
   
</select>



<!-- <select id="ProductItemgetList" resultType="kosta.todayroom.domain.ProductVO">

	select * from product

</select>
 -->

<insert id="ProductStoreRegister">
		insert into store (store_seq, member_seq, store_title, store_content, store_name, store_price, store_date, store_lcategory, store_scategory)
		values(SEQ_STORE_STORE_SEQ.nextval, #{member_seq}, #{store_title}, #{store_content}, #{store_name}, #{store_price}, sysdate, #{store_lcategory}, #{store_scategory})
</insert>


<insert id="ProductItemRegister">
insert into product(product_seq, store_seq, product_name, product_price, product_fname, product_uuid, product_uploadpath)
select SEQ_PRODUCT_PRODUCT_SEQ.NEXTVAL, SEQ_STORE_STORE_SEQ.CURRVAL, A.* from(
 <foreach item="item" collection="list" separator="UNION ALL " >
   select #{item.product_name} as product_name,
        #{item.product_price} as product_price,
        #{item.product_fname} as product_fname,
        #{item.product_uuid} as product_uuid,
        #{item.product_uploadpath} as product_uploadpath
   from dual
 </foreach>) A
</insert>



<select id="ProductItemRead" resultType="kosta.todayroom.domain.ProductVO">
	select * from product where product_seq = #{product_seq}
</select>

<!-- <delete id="ProductStoreRemove">
	delete from store where store_seq = #{store_seq}
</delete>
 -->

<!-- 하나의 상품 수정 -->

<update id="ProductItemModify">
	update product set product_name = #{product_name},
	product_price = #{product_price}
	where product_seq = #{product_seq}
</update>



</mapper>